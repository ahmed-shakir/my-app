package se.supernovait.my.models;

import com.codename1.rad.annotations.Autogenerated;
import com.codename1.rad.models.Entity;
import com.codename1.rad.models.SimpleEntityWrapper;
import java.lang.String;
import java.util.Date;

@Autogenerated
public final class NotificationWrapper extends SimpleEntityWrapper implements Notification {
  public NotificationWrapper(Entity entity) {
    super(entity);
  }

  public static Notification wrap(Entity entity) {
    if (entity == null) return null;if (entity instanceof Notification) return (Notification)entity;Notification wrapper = entity.getEntity().getWrapper(Notification.class);if (wrapper != null) return wrapper;wrapper = new NotificationWrapper(entity); entity.getEntity().addWrapper(wrapper);return wrapper;
  }

  public boolean isNew() {
    return (boolean)getEntity().getBoolean(isNew);
  }

  public void setNew(boolean _value) {
    getEntity().setBoolean(isNew, _value);
  }

  public String getId() {
    return (String)getEntity().getText(id);
  }

  public void setId(String _value) {
    getEntity().setText(id, _value);
  }

  public String getTitle() {
    return (String)getEntity().getText(title);
  }

  public void setTitle(String _value) {
    getEntity().setText(title, _value);
  }

  public String getBody() {
    return (String)getEntity().getText(body);
  }

  public void setBody(String _value) {
    getEntity().setText(body, _value);
  }

  public Date getTimestamp() {
    return (Date)getEntity().getDate(timestamp);
  }

  public void setTimestamp(Date _value) {
    getEntity().setDate(timestamp, _value);
  }
}
